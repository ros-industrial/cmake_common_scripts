name: Package-Debian-Build

on:
  push:
    tags:
    - '*'

  # allow manually starting this workflow
  workflow_dispatch:

jobs:
  industrial_ci:
    name: Noetic
    runs-on: ubuntu-latest
    env:
      CI_NAME: Package-Debian-Build
      OS_NAME: ubuntu
      OS_CODE_NAME: focal
      ROS_DISTRO: noetic
      ROS_REPO: main
      ROSDEP_SKIP_KEYS: "iwyu"
      TARGET_CMAKE_ARGS: "-DCMAKE_BUILD_TYPE=Release -DRICB_PACKAGE=ON"
      CPACK_ARTIFACTS_DIR: "/root/artifacts"
      CPACK_WORKING_DIR: '/root/target_ws/build/ros_industrial_cmake_boilerplate'
      DOCKER_RUN_OPTS: '-e CPACK_WORKING_DIR -e CPACK_ARTIFACTS_DIR -v ~/work/ros_industrial_cmake_boilerplate/ros_industrial_cmake_boilerplate/artifacts:/root/artifacts'
      AFTER_SCRIPT: '$target_ws/src/ros_industrial_cmake_boilerplate/.run-cpack'
    steps:
      - uses: actions/checkout@v2
      - name: Create artifacts directory
        run: |
          mkdir artifacts

      - name: Free Disk Space
        run: |
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt clean
          docker rmi $(docker image ls -aq)
          df -h

      - uses: 'ros-industrial/industrial_ci@master'
        env: ${{env}}

      - uses: actions/upload-artifact@v2
        with:
          name: debian_package
          path: /home/runner/work/ros_industrial_cmake_boilerplate/ros_industrial_cmake_boilerplate/artifacts/*.deb

      - uses: actions/upload-artifact@v2
        with:
          name: archive_package
          path: /home/runner/work/ros_industrial_cmake_boilerplate/ros_industrial_cmake_boilerplate/artifacts/*.tar.xz
